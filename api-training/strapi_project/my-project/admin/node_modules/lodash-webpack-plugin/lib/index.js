'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _includes2 = require('lodash/includes');

var _includes3 = _interopRequireDefault(_includes2);

var _isMatch2 = require('lodash/isMatch');

var _isMatch3 = _interopRequireDefault(_isMatch2);

var _memoize2 = require('lodash/memoize');

var _memoize3 = _interopRequireDefault(_memoize2);

var _forOwn2 = require('lodash/forOwn');

var _forOwn3 = _interopRequireDefault(_forOwn2);

var _escapeRegExp2 = require('lodash/escapeRegExp');

var _escapeRegExp3 = _interopRequireDefault(_escapeRegExp2);

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

exports.default = Plugin;

var _fs = require('fs');

var _fs2 = _interopRequireDefault(_fs);

var _path = require('path');

var _path2 = _interopRequireDefault(_path);

var _listing = require('./listing');

var _mapping = require('./mapping');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

var lodashRoot = _path2.default.dirname(require.resolve('lodash'));
var normalize = function normalize(string) {
  return string.replace(reFwdSep, rsSysSep);
};

var reFwdSep = /\//g;
var rsSysSep = (0, _escapeRegExp3.default)(_path2.default.sep);
var reLodashRes = RegExp(normalize('lodash(?:/(?!fp/)|-amd/|-es/|\\.\\w+/)'));
var reExplicitReq = RegExp('^lodash(?:/|-amd/|-es/|\\.\\w+/)\\w+$');

function getPatterns(options) {
  var result = [];
  (0, _forOwn3.default)(_mapping.features, function (pairs, key) {
    if (!options[key]) {
      result.push.apply(result, _toConsumableArray(pairs));
    }
  });
  return result;
}

/*----------------------------------------------------------------------------*/

var LodashModuleReplacementPlugin = function () {
  function LodashModuleReplacementPlugin(options) {
    _classCallCheck(this, LodashModuleReplacementPlugin);

    this.matches = [];
    this.options = Object.assign({}, options);
    this.patterns = getPatterns(this.options);
    this.resolve = this.resolve.bind(this);
  }

  _createClass(LodashModuleReplacementPlugin, [{
    key: 'apply',
    value: function apply(compiler) {
      var resolve = (0, _memoize3.default)(this.resolve, function (_ref) {
        var resource = _ref.resource;
        return resource;
      });
      compiler.plugin('normal-module-factory', function (nmf) {
        nmf.plugin('after-resolve', function (data, callback) {
          if (data) {
            data.resource = resolve(data);
            return callback(null, data);
          }
          return callback();
        });
      });
    }
  }, {
    key: 'resolve',
    value: function resolve(_ref2) {
      var _this = this;

      var rawRequest = _ref2.rawRequest,
          resource = _ref2.resource;

      var result = resource;
      if (!reLodashRes.test(resource)) {
        return result;
      }
      var isExplicit = reExplicitReq.test(rawRequest);
      var resName = _path2.default.basename(resource, '.js');
      var resRoot = _path2.default.dirname(resource);

      if (isExplicit) {
        // Apply any feature set overrides for explicitly requested modules.
        var override = _mapping.overrides[_path2.default.basename(rawRequest, '.js')];
        if (!(0, _isMatch3.default)(this.options, override)) {
          this.patterns = getPatterns(Object.assign(this.options, override));
        }
      }
      this.patterns.forEach(function (pair) {
        // Replace matches as long as they aren't explicit requests for stubbed modules.
        var isStubbed = (0, _includes3.default)(_listing.stubs, pair[1]);
        if (resName != pair[0] || isExplicit && isStubbed) {
          return;
        }
        var moduleFilename = `${pair[1]}.js`;
        var modulePath = _path2.default.join(resRoot, moduleFilename);
        var exists = _fs2.default.existsSync(modulePath);

        if (isStubbed && !exists) {
          exists = true;
          modulePath = _path2.default.join(lodashRoot, moduleFilename);
        }
        if (exists) {
          result = modulePath;
          _this.matches.push([resource, result]);
          return false;
        }
      });
      return result;
    }
  }]);

  return LodashModuleReplacementPlugin;
}();

;

/*----------------------------------------------------------------------------*/

function Plugin(nodeResolve, options) {
  // For Webpack.
  if (this instanceof Plugin) {
    return new LodashModuleReplacementPlugin(nodeResolve);
  }
  // For Rollup.
  var _resolveId = nodeResolve.resolveId;
  var resolver = new LodashModuleReplacementPlugin(options);
  var resolve = (0, _memoize3.default)(resolver.resolve, function (_ref3) {
    var resource = _ref3.resource;
    return resource;
  });

  return Object.assign({}, nodeResolve, {
    resolveId(importee, importer) {
      return _resolveId(importee, importer).then(function (id) {
        return resolve({ 'rawRequest': importee, 'resource': id });
      });
    }
  });
};
module.exports = exports['default'];