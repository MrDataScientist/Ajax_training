{"version":3,"sources":["main.js"],"names":["contract_abidefinition","contract_bytecode","autoRetrieveFlag","accounts","filterWatch","filterEventCounter","contractEvent","contractEventCounter","nodeType","window","addEventListener","web3","Web3","currentProvider","console","log","providers","HttpProvider","provider","document","getElementById","value","startApp","doFilterStopWatching","doContractEventWatchStop","isConnected","setData","setWeb3Version","doGetAccounts","doGetNodeStatus","doGetCompilers","doConnect","versionJson","version","getNode","error","result","toLowerCase","includes","setUIBasedOnNodeType","net","getListening","getPeerCount","eth","getAccounts","length","alert","removeAllChildItems","i","addAccountsToList","coinbase","substring","defaultAccount","doGetBalances","addAccountsToSelects","getBalance","defaultBlock","bal","fromWei","toFixed","addAccountBalancesToList","doSendTransaction","transactionObject","createTransactionObjectJson","sendTransaction","etherscanLinkA","href","createEtherscanIoUrl","innerHTML","doUnlockAccount","account","password","personal","unlockAccount","str","doLockAccount","lockAccount","getCompilers","doCompileSolidityContract","source","flattenSource","compile","solidity","compileResultWindowsHack","JSON","stringify","contract_1","code_1","abi_1","prop","code","info","abiDefinition","doDeployContract","resetDeploymentResultUI","abiDefinitionString","parse","bytecode","contract","gas","params","from","data","constructor_param","new","address","setEtherscanIoLink","transactionHash","doDeployContractSynchronous","contractData","getData","getTransactionReceipt","createContractInstance","addr","instance","at","doContractFunctionCall","funcName","parameterValue","setNum","call","setExecuteResultUI","getNum","doContractSendCall","estimatedGas","txnObject","doFilterWatchStart","options","generateFilterOptions","filter","watch","addEventListItem","stopWatching","undefined","clearList","doFilterGetLogs","filterGet","get","doContractEventWatchStart","createContractEventInstance","doContractEventGet","event","contractAddress","contractInstance","indexedEventValues","additionalFilterOptions","NumberSetEvent"],"mappings":"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","file":"main.js","sourcesContent":["/**\n * web3JS Sample DAPP by http://acloudfan.com\n * Version: 102     May 20th, 2017\n * \n * Application developed as part of the course on Ethereum Blockchain\n * All Rights Reserved - Please do not share. \n * Updated versions of the code is available on the link below:\n * APP will be updated time to time so please check back\n * \n * http://www.acloudfan.com\n * \n * This DAPP is available on the following link .... to use it you would need MetaMask\n * http://TheDapps.com\n * \n * Geth\n * =====\n * Application developed against Geth/ROPSTEN\n * \n * TestRPC\n * =======\n * Some API NOT Supported in TestRPC\n * Etherscan.io links will not be supported for TestRPC\n * \n * META MASK\n * =========\n * MetaMask will work - except some for some functions coded SYNCHRONOUSLY\n * You may change it to work with MetaMask\n * \n */\n\n\n// The sample code was compiled in Remix\n// Bytecode / Interface generated by Remix was pasted here\nvar contract_abidefinition = '[{\"constant\":false,\"inputs\":[],\"name\":\"getNum\",\"outputs\":[{\"name\":\"n\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"n\",\"type\":\"uint256\"}],\"name\":\"setNum\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"inputs\":[{\"name\":\"x\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"caller\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"oldNum\",\"type\":\"bytes32\"},{\"indexed\":true,\"name\":\"newNum\",\"type\":\"bytes32\"}],\"name\":\"NumberSetEvent\",\"type\":\"event\"}]';\nvar contract_bytecode = '0x6060604052341561000c57fe5b604051602080610168833981016040528080519060200190919050505b806000819055505b505b610126806100426000396000f30060606040526000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806367e0badb146044578063cd16ecbf146067575bfe5b3415604b57fe5b60516084565b6040518082815260200191505060405180910390f35b3415606e57fe5b60826004808035906020019091905050608f565b005b600060005490505b90565b60006000549050816000819055506000546001026000191681600102600019163373ffffffffffffffffffffffffffffffffffffffff167f108fd0bf2253f6baf35f111ba80fb5369c2e004b88e36ac8486fcee0c87e61ce60405180905060405180910390a45b50505600a165627a7a72305820b86215323334042910c2707668d7cc3c3ec760d2f5962724042482293eba5f6b0029';\n\n\nvar autoRetrieveFlag = true;\n\n// Holds the accounts\nvar accounts;\n\n// Holds the filter objects\nvar filterWatch;\nvar filterEventCounter;\n\n// Holds the contract event object\nvar contractEvent;\nvar contractEventCounter=0;\n\n// Maintains the info on node type\nvar     nodeType = 'geth';\n\n/**\n * Listener for load\n */\nwindow.addEventListener('load', function() {\n\n  // Checking if Web3 has been injected by the browser (Mist/MetaMask)\n  if (typeof web3 !== 'undefined') {\n    // Use Mist/MetaMask's provider\n    window.web3 = new Web3(web3.currentProvider);\n  } else {\n    console.log('Injected web3 Not Found!!!')\n    // fallback - use your fallback strategy (local node / hosted node + in-dapp id mgmt / fail)\n    window.web3 = new Web3(new Web3.providers.HttpProvider('http://localhost:8545'));\n\n    var provider = document.getElementById('provider_url').value;\n    window.web3 = new Web3(new Web3.providers.HttpProvider(provider));\n  }\n\n  // Now you can start your app & access web3 freely:\n  startApp()\n\n})\n\n\n/**\n * This method gets invoked when document is ready\n */\nfunction    startApp(){\n\n    // If the app is reconnected we should reset the watch\n    doFilterStopWatching();\n    doContractEventWatchStop();\n\n    // Set the connect status on the app\n    if (web3 && web3.isConnected()) {\n        setData('connect_status','Connected', false);\n\n        // Gets the version data and populates the result UI\n        setWeb3Version();\n\n        if(autoRetrieveFlag) doGetAccounts();\n\n    } else {\n        setData('connect_status','Not Connected', true);\n    }\n\n    // no action to be taken if this flag is OFF  \n    // during development for convinience you may set autoRetrieveFlag=true\n    if(!autoRetrieveFlag)  return;\n\n\n\n    // doConnect();\n    // // doGetAccounts();\n    doGetNodeStatus();\n\n    // Compilation is available only for TestRPC\n    // Geth 1.6 and above does not support compilation\n    // MetaMask does not support compilation\n    doGetCompilers();\n}\n\n/**\n * This method is called for connecting to the node\n * The Provider URL is provided in a Document element with the \n * id = provider_url\n */\n\n\nfunction doConnect()    {\n\n    // Get the provider URL\n    var provider = document.getElementById('provider_url').value;\n    var provider = document.getElementById('provider_url').value;\n    window.web3 = new Web3(new Web3.providers.HttpProvider(provider));\n    startApp();\n\n}\n\n/**\n * Get the version information for Web3\n */\n\nfunction    setWeb3Version() {\n\n    var versionJson = {};\n\n    // Asynchronous version\n    web3.version.getNode(function(error, result){\n        if(error) setData('version_information',error,true);\n        else {\n            setData('version_information',result,false);\n\n            if(result.toLowerCase().includes('metamask')){\n                nodeType = 'metamask';\n            } else if(result.toLowerCase().includes('testrpc')){\n                nodeType = 'testrpc';\n            } else {\n                nodeType = 'geth';\n            }\n\n            \n            // set up UI elements based on the node type\n            setUIBasedOnNodeType();\n        }\n    });\n}\n\n\n\n/**\n * Uses the web3.net status to check if the client is listening and peer count\n */\n\nfunction    doGetNodeStatus()  {\n\n    // Asynch version\n    web3.net.getListening(function(error, result){\n        if(error) setData('get_peer_count',error,true);\n        else {\n            // Since connected lets get the count\n            web3.net.getPeerCount(  function(  error,  result ) {\n            if(error){\n                setData('get_peer_count',error,true);\n            } else {\n                setData('get_peer_count','Peer Count: '+result,(result == 0));\n            }\n        });\n        }\n    });\n}\n\n/**\n * Gets the accounts under the node\n * \n */\n\nfunction    doGetAccounts() {\n    // This is the synch call for getting the accounts\n    // var accounts = web3.eth.accounts\n    \n    // Asynchronous call to get the accounts\n    // result = [Array of accounts]\n    // MetaMask returns 1 account in the array - that is the currently selected account\n    web3.eth.getAccounts(function (error, result) {\n        if (error) {\n            setData('accounts_count', error, true);\n        } else {\n            accounts = result;\n            setData('accounts_count', result.length, false);\n            // You need to have at least 1 account to proceed\n            if(result.length == 0) {\n                if(nodeType == 'metamask'){\n                    alert('Unlock MetaMask *and* click \\'Get Accounts\\'');\n                }\n                return;\n            }\n\n            // Remove the list items that may already be there\n            removeAllChildItems('accounts_list');\n            // Add the accounts as list items\n            for (var i = 0; i < result.length; i++) {\n                addAccountsToList('accounts_list',i,result[i])\n            }\n            \n            var coinbase = web3.eth.coinbase;\n            // trim it so as to fit in the window/UI\n            if(coinbase) coinbase = coinbase.substring(0,25)+'...'\n            setData('coinbase', coinbase, false);\n            // set the default accounts\n            var defaultAccount = web3.eth.defaultAccount;\n            if(!defaultAccount){\n                web3.eth.defaultAccount =  result[0];\n                defaultAccount = '[Undef]' + result[0];\n            }\n\n            defaultAccount = defaultAccount.substring(0,25)+'...';\n            setData('defaultAccount', defaultAccount, false);\n        }\n        // Get the balances of all accounts doGetBalances\n        doGetBalances(accounts)\n\n        // This populates the SELECT boxes with the accounts\n        addAccountsToSelects(accounts);\n    });\n}\n\n/**\n * Get the balances of all accounts.\n */\nfunction    doGetBalances(accounts) {\n\n    // Remove the balances if they already exist\n    removeAllChildItems('account_balances_list');\n    \n    // Add the balances as the list items\n    for (var i = 0; i < accounts.length; i++) {\n\n       // var bal = web3.eth.getBalance(accounts[i]);\n       web3.eth.getBalance(accounts[i],web3.eth.defaultBlock,function(error,result){\n           // Convert the balance to ethers\n            var bal = web3.fromWei(result,'ether').toFixed(2);\n            addAccountBalancesToList('account_balances_list',i,bal);\n        });\n    }\n}\n\n/**\n * This gets invoked for sending the transaction\n */\n\nfunction    doSendTransaction()  {\n\n    var transactionObject = createTransactionObjectJson();\n\n    web3.eth.sendTransaction(transactionObject, function(error, result) {\n\n        if(error){\n            setData('send_transaction_error_or_result', error, true);\n        } else {\n            setData('send_transaction_error_or_result', result, false);\n            // set the link to ether scan\n            var etherscanLinkA=document.getElementById('etherscan_io_tx_link');\n            etherscanLinkA.href = createEtherscanIoUrl('tx',result);\n            etherscanLinkA.innerHTML='etherscan.io'\n            //console.log(etherscanLinkA)\n        }\n    });\n}\n\n/**\n * Unlocks the account\n * UNLOCK/LOCK not supported in TestRPC\n * Ignored in MetaMask\n */\n\nfunction    doUnlockAccount()  {\n\n    setData('lock_unlock_result','...',true);\n    var account = document.getElementById('select_to_unlock_account').value;\n    var password = document.getElementById('unlock_account_password').value;\n\n    // synchronous flavor\n    // web3.personal.unlockAccount(account, password, duration)\n    // web3.personal.unlockAccount(account, password)\n    \n\n    web3.personal.unlockAccount(account, password,function(error, result)  {\n\n        // console.log(error,result)\n        if(error){\n            setData('lock_unlock_result',error,true);\n        } else {\n            // Result = True if unlocked, else false\n            var str = account.substring(0,20)+'...Unlocked';\n            if(result){\n                setData('lock_unlock_result',str,false);\n            } else {\n                // This does not get called - since and error is returned for incorrect password :-)\n                str = 'Incorrect Password???';\n                setData('lock_unlock_result',str,true);\n            }\n            \n            \n        }\n    });\n}\n\n/**\n * Lock the account\n */\nfunction    doLockAccount() {\n\n    \n\n    setData('lock_unlock_result','...',true);\n    var account = document.getElementById('select_to_unlock_account').value;\n    //Synchronous flavor\n    //web3.personal.lockAccount(account)\n\n    web3.personal.lockAccount(account, function(error, result){\n\n        console.log(error,result)\n        if(error){\n            setData('lock_unlock_result',error,true);\n        } else {\n            var str = account.substring(0,20)+'...Locked';\n            setData('lock_unlock_result',str,false);\n        }\n    });\n}\n\n/**\n * Gets the list of compilers\n */\nfunction doGetCompilers()  {\n\n    \n\n    web3.eth.getCompilers(function(error, result){\n        if(error){\n            setData('list_of_compilers',error,true);\n        } else {\n            // result has an array of compilers\n            if(result.length == 0)\n                setData('list_of_compilers','No Compilers!!!',true);\n            else\n                setData('list_of_compilers',result,false);\n        }\n    });\n}\n\n/**\n * Starting geth 1.6 - Solidity compilation is not allowed from\n * web3 JSON/RPC\n */\n\nfunction    doCompileSolidityContract()  {\n\n\n    var source = document.getElementById('sourcecode').value;\n  \n    console.log(flattenSource(source));\n\n    web3.eth.compile.solidity(source, function(error, result){\n\n        if(error){\n            console.log(error);\n            setData('compilation_result',error,true);\n        } else {\n            // This is an issue seen only on windows - solc compile binary - ignore\n            result = compileResultWindowsHack(result);\n            console.log('Compilation Result=',JSON.stringify(result));\n            var contract_1 = '';\n            var code_1 = '';\n            var abi_1 = '';\n            for(var prop in result){\n                contract_1 = prop;\n                code_1 = result[prop].code;\n                if(!code_1){\n                    // Test RPC returns code in result.code\n                    code_1 = result.code;\n                }\n                if(result[prop].info){\n                    abi_1 = result[prop].info.abiDefinition;\n                } else {\n                    // Test RPC does not have the contracts :) in result\n                    abi_1 = result.info.abiDefinition;\n                }\n                break;\n            }\n            // Populate the UI elements\n            setData('compilation_result','Contract#1: '+contract_1,false);\n            document.getElementById('compiled_bytecode').value=code_1;\n            document.getElementById('compiled_abidefinition').value=JSON.stringify(abi_1);\n            \n        }\n    });\n}\n\n\n\n\n/**\n * Deploys the contract - ASYNCH\n */\n\nfunction    doDeployContract()   {\n    // Reset the deployment results UI\n    resetDeploymentResultUI();\n\n    var     abiDefinitionString = document.getElementById('compiled_abidefinition').value;\n    var     abiDefinition = JSON.parse(abiDefinitionString);\n\n    var     bytecode = document.getElementById('compiled_bytecode').value;\n\n    // 1. Create the contract object\n    var  contract = web3.eth.contract(abiDefinition);\n\n    // Get the estimated gas\n    var   gas = document.getElementById('deployment_estimatedgas').value;\n\n    // 2. Create the params for deployment - all other params are optional, uses default\n    var  params = {\n        from: web3.eth.coinbase,\n        data: bytecode,\n        gas: gas\n    }\n\n    // 3. This is where the contract gets deployed\n    // Callback method gets called *2* \n    // First time : Result = Txn Hash\n    // Second time: Result = Contract Address\n    var constructor_param = 10;\n\n    contract.new(constructor_param,params,function(error,result){\n\n        if(error){\n            setData('contracttransactionhash','Deployment Failed: '+error,true);\n        } else {\n            console.log('RECV:',result)\n            if(result.address){\n                document.getElementById('contractaddress').value=result.address;\n                setEtherscanIoLink('contractaddress_link','address',result.address);\n            } else {\n                // gets set in the first call\n                setData('contracttransactionhash',result.transactionHash, false);\n                setEtherscanIoLink('contracttransactionhash_link','tx',result.transactionHash);\n            }\n        }\n    });\n}\n\n/**\n * Deploys the contract - Synchronous\n * Function not in use from UI. Created to show how once can use the synch API\n * contract.new\n */\n\nfunction    doDeployContractSynchronous()   {\n\n    var     abiDefinitionString = document.getElementById('compiled_abidefinition').value;\n    var     abiDefinition = JSON.parse(abiDefinitionString);\n\n    var     bytecode = document.getElementById('compiled_bytecode').value;\n\n    // 1. Create the contract object\n    var  contract = web3.eth.contract(abiDefinition);\n\n    // Get the estimated gas\n    var   gas = document.getElementById('deployment_estimatedgas').value;\n\n    // 2. Create the params for deployment - all other params are optional, uses default\n    var  params = {\n        from: web3.eth.coinbase,\n        data: bytecode,\n        gas: gas\n    }\n\n    var contractData = contract.new.getData(10,{'data':bytecode});\n    console.log('Contract Data=',contractData);\n    // call send transaction and then call getTransactionReceipt\n    params.data=contractData\n    var transactionHash= web3.eth.sendTransaction(params)\n    console.log('TxnHash=',transactionHash);\n    web3.eth.getTransactionReceipt(transactionHash, function(error, result){\n        if(error) console.log('SENDTran Error=', error)\n        else   if(error) console.log('SENDTran Hash=', result);\n    });\n\n    return\n}\n\n// Utility method for creating the contract instance\nfunction  createContractInstance(addr){\n    var     abiDefinitionString = document.getElementById('compiled_abidefinition').value;\n    var     abiDefinition = JSON.parse(abiDefinitionString);\n\n    // Instance uses the definition to create the function\n\n    var    contract = web3.eth.contract(abiDefinition);\n\n   // THIS IS AN EXAMPLE - How to create a deploy using the contract\n   // var instance = contract.new(constructor_params, {from:coinbase, gas:10000})\n   // Use the next for manual deployment using the data generated\n   // var contractData = contract.new.getData(constructor_params, {from:coinbase, gas:10000});\n\n    var    address = addr;\n    \n    if(!address) address = document.getElementById('contractaddress').value;\n\n    // Instance needs the address\n\n    var    instance = contract.at(address);\n\n    return instance;\n}\n\n/**\n * This invokes the contract function\n * locally on the node with no state change propagation\n */\nfunction    doContractFunctionCall()  {\n    // This leads to the invocation of the method locally\n    var instance = createContractInstance();\n\n    var    funcName = document.getElementById('contract_select_function').value;\n\n    if(funcName === 'setNum'){\n        var    parameterValue = document.getElementById('setnum_parameter').value;\n\n        // MetaMask does not allow synchronous call to 'call' for non-constant function\n        // Change this to asynchronous :)\n        var value = instance.setNum.call(parameterValue);\n\n        setExecuteResultUI('Call',funcName,parameterValue,value,'',false);\n    } else {\n\n        instance.getNum.call({},web3.eth.defaultBlock, function(error,result){\n            setExecuteResultUI('Call',funcName,'',result,'',false);\n        });\n\n        \n    }\n}\n\n/**\n * send Transaction costs Gas. State changes are recorded on the chain.\n */\nfunction    doContractSendCall()   {\n    // creating the cntract instance\n    var instance = createContractInstance();\n    // read the ui elements\n    var estimatedGas = document.getElementById('contract_execute_estimatedgas').value;\n    var parameterValue = document.getElementById('setnum_parameter').value;\n    var funcName = document.getElementById('contract_select_function').value;\n    //value NOT used as the contract function needs to be modified with \"payable\" modifier\n    //var value = document.getElementById('invocation_send_value_in_ether').value;\n    //value = web3.toWei(value,'ether');\n\n    // Create the transaction object\n    var    txnObject = {\n        from: web3.eth.coinbase,\n        gas: estimatedGas\n    }\n\n    if(funcName === 'setNum'){\n        // setNum with sendTransaction\n        instance.setNum.sendTransaction(parameterValue,txnObject,function(error, result)  {\n\n            console.log('RECVED>>',error,result);   \n            if(error){\n                setExecuteResultUI('Send Transaction:   ',funcName,'',error,'',true);\n            } else {\n                setExecuteResultUI('Send Transaction:   ',funcName,parameterValue,result,result,false);\n            }\n        });\n    } else {\n         // getNum with sendTransaction\n        instance.getNum.sendTransaction(txnObject,function(error, result)  {\n\n            console.log('RECVED>>',error,result);   \n            if(error){\n                setExecuteResultUI('Send Transaction:   ',funcName,'',error,'',true);\n            } else {\n                setExecuteResultUI('Send Transaction:   ',funcName,'',result,result,false);\n            }\n        });\n    }        \n}\n\n/**\n * Starts the filter watch for events with options specified by the user\n */\n\n\nfunction    doFilterWatchStart()   {\n    //1. Stop the wtach if its already ON\n    doFilterStopWatching();\n    //2. Reset the UI\n    setData('watch_event_count','0',false);\n\n    //3. Create the filter option\n    var options = generateFilterOptions();\n    console.log('FILTER Watch Options:', JSON.stringify(options));\n\n    //4. Set the applied watch filter UI Input box\n    document.getElementById('applied_watch_filter').value=JSON.stringify(options);\n\n    //5. Create instance of the filter\n    filterWatch = web3.eth.filter(options);\n\n    //6. Now start watching\n    filterWatch.watch(function(error,result){\n        if(error){\n            console.error('Filter Watch Error: ',error);\n        } else {\n            filterEventCounter++;\n            // Update the UI for the counter\n            setData('watch_event_count', filterEventCounter, false);\n\n            // Updates the UI with received event\n            addEventListItem('watch_events_list',result,5);\n        }\n    });\n}\n\n/**\n * Stop watching for events\n */\n\nfunction    doFilterStopWatching()  {\n\n    // 1. Stop watching if watching iactive\n    if(filterWatch){\n        filterWatch.stopWatching();\n        filterWatch = undefined;\n    }\n    // 2. Reset the UI\n    setData('watch_event_count','Not Watching',true);\n    document.getElementById('applied_watch_filter').value='';\n\n    // 3. Remove all of the past events from the list\n    clearList('watch_events_list');\n\n    // 4. reset the counter\n    filterEventCounter = 0;\n}\n\n/**\n * Get the logs for the specified filter\n * Testnet sample contract address: \n */\n\nfunction    doFilterGetLogs()  {\n\n    // 1. Clear the list\n    clearList('get_logs_list');\n    \n    // 2. Create the filter option\n    var options = generateFilterOptions();\n    console.log('FILTER Get Options:', JSON.stringify(options));\n\n    // 3. Set the applied watch filter UI Input box\n    document.getElementById('applied_log_filter').value=JSON.stringify(options);\n\n    // 4. Create the instance of the filter\n    var filterGet = web3.eth.filter(options);\n\n    // 5. Invoke get on filter with the callback function\n    filterGet.get(function(error, result){\n        if(error){\n            console.log('GET Error:',error);\n            setData('get_log_count',error, true);\n        } else {\n            // result = array of events\n            // Update UI with the data received as an array of events\n            setData('get_log_count',result.length, false);\n            for(var i = 0; i < result.length ; i++){\n                //console.log(\"Event.watch=\"+JSON.stringify(result[i]))\n                addEventListItem('get_logs_list',result[i],50);\n            }\n        }\n    });\n}\n\n/**\n * To start the event watching using the contract object\n */\n\nfunction    doContractEventWatchStart() {\n\n    if(contractEvent){\n        doContractEventWatchStop();\n    }\n\n    // Reset the UI\n    setData('watch_contract_instance_event_count','0',false);\n\n    contractEvent = createContractEventInstance();\n\n    contractEvent.watch(function(error, result){\n        if(error){\n            console.error('Contract Event Error');\n        } else {\n           \n        //    console.log(\"Event.watch=\"+JSON.stringify(result))\n            // increment the count watch_instance_event_count\n            contractEventCounter++;\n            setData('watch_contract_instance_event_count',contractEventCounter, false );\n\n            addEventListItem('watch_contract_events_list',result,5);\n        }\n    });\n}\n\n\n/**\n * To stop the event watching using the contract object\n */\n\nfunction    doContractEventWatchStop()   {\n\n    if(contractEvent){\n        contractEvent.stopWatching();\n        contractEvent = undefined;\n    }\n    contractEventCounter = 0;\n    clearList('watch_contract_events_list');\n    setData('watch_contract_instance_event_count', '---', true);\n}\n\n/**\n * Gets the logs for the specific contract instance\n */\n\nfunction doContractEventGet() {\n\n    clearList('get_contract_instance_logs_list');\n    setData('get_contract_instance_log_count', '---', true);\n    var event = createContractEventInstance();\n    event.get(function(error, result){\n        if(error){\n            setData('get_contract_instance_log_count',error,true);\n        } else {\n            setData('get_contract_instance_log_count',result.length, false);\n            for(var i = 0; i < result.length ; i++){\n                addEventListItem('get_contract_instance_logs_list',result[i],50);\n            }\n        }\n    });\n}\n\n/**\n * Utility method for creating an instance of the event\n */\nfunction createContractEventInstance(){\n    var contractAddress = document.getElementById('contract_instance_address').value\n\n    var contractInstance = createContractInstance(contractAddress);\n\n    // geth the indexed data values JSON\n    var indexedEventValues = document.getElementById('indexed_event_values').value\n    indexedEventValues = JSON.parse(indexedEventValues)\n\n    var additionalFilterOptions = document.getElementById('additional_filter_event_values').value;\n    additionalFilterOptions = JSON.parse(additionalFilterOptions);\n\n    return contractInstance.NumberSetEvent(indexedEventValues, additionalFilterOptions);\n}"]}