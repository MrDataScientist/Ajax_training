// Factory "morphs" into a Pudding class.
// The reasoning is that calling load in each context
// is cumbersome.

(function() {

  var contract_data = {
    abi: [{"constant":false,"inputs":[{"name":"arrayFeedNumber","type":"uint256"}],"name":"getSpecificMessage","outputs":[{"name":"","type":"string"}],"type":"function"},{"constant":false,"inputs":[],"name":"getAllMessages","outputs":[{"name":"","type":"string"}],"type":"function"},{"constant":false,"inputs":[{"name":"message","type":"string"}],"name":"writeMessage","outputs":[{"name":"","type":"bool"}],"type":"function"},{"constant":false,"inputs":[{"name":"","type":"address"}],"name":"getUserName","outputs":[{"name":"","type":"string"}],"type":"function"},{"constant":false,"inputs":[],"name":"getLatestMessage","outputs":[{"name":"","type":"string"}],"type":"function"}],
    binary: "60606040526104b2806100126000396000f3606060405260e060020a6000350463493eff8e811461004757806353f5e380146100e9578063b588bfad14610167578063d84f55ee146101e1578063fdd2732e1461026d575b005b6100f9600435604080516020810190915260008152600180548390811015610002575060008190527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf683018054604080516020600295841615610100026000190190931694909404601f8101839004830285018301909152808452908301828280156103095780601f106102de57610100808354040283529160200191610309565b6040805160208101909152600081525b60405180806020018281038252838181518152602001915080519060200190808383829060006004602084601f0104600f02600301f150905090810190601f1680156101595780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6040805160206004803580820135601f81018490048402850184019095528484526102ca949193602493909291840191908190840183828082843750949650505050505050600060016000508054806001018281815481835581811511610315578183600052602060002091820191016103159190610384565b6100f96004356040805160208181018352600080835273ffffffffffffffffffffffffffffffffffffffff331681528082528390208054845160026001831615610100026000190190921691909104601f8101849004840282018401909552848152929390918301828280156103095780601f106102de57610100808354040283529160200191610309565b6100f960408051602081019091526000808252805b600154821015610420576001805483908110156100025760008290529201917fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6019050610282565b604080519115158252519081900360200190f35b820191906000526020600020905b8154815290600101906020018083116102ec57829003601f168201915b50505050509050919050565b5050509190906000526020600020900160008490919091509080519060200190828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106103e857805160ff19168380011785555b506104189291506103d0565b50506001015b808211156103e4576000818150805460018160011615610100020316600290046000825580601f106103b6575061037e565b601f01602090049060005260206000209081019061037e91905b808211156103e457600081556001016103d0565b5090565b82800160010185558215610372579182015b828111156103725782518260005055916020019190600101906103fa565b505050919050565b805460408051602060026001851615610100026000190190941693909304601f8101849004840282018401909252818152918391908301828280156104a65780601f1061047b576101008083540402835291602001916104a6565b820191906000526020600020905b81548152906001019060200180831161048957829003601f168201915b5050505050925050509056",
    unlinked_binary: "60606040526104b2806100126000396000f3606060405260e060020a6000350463493eff8e811461004757806353f5e380146100e9578063b588bfad14610167578063d84f55ee146101e1578063fdd2732e1461026d575b005b6100f9600435604080516020810190915260008152600180548390811015610002575060008190527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf683018054604080516020600295841615610100026000190190931694909404601f8101839004830285018301909152808452908301828280156103095780601f106102de57610100808354040283529160200191610309565b6040805160208101909152600081525b60405180806020018281038252838181518152602001915080519060200190808383829060006004602084601f0104600f02600301f150905090810190601f1680156101595780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6040805160206004803580820135601f81018490048402850184019095528484526102ca949193602493909291840191908190840183828082843750949650505050505050600060016000508054806001018281815481835581811511610315578183600052602060002091820191016103159190610384565b6100f96004356040805160208181018352600080835273ffffffffffffffffffffffffffffffffffffffff331681528082528390208054845160026001831615610100026000190190921691909104601f8101849004840282018401909552848152929390918301828280156103095780601f106102de57610100808354040283529160200191610309565b6100f960408051602081019091526000808252805b600154821015610420576001805483908110156100025760008290529201917fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6019050610282565b604080519115158252519081900360200190f35b820191906000526020600020905b8154815290600101906020018083116102ec57829003601f168201915b50505050509050919050565b5050509190906000526020600020900160008490919091509080519060200190828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106103e857805160ff19168380011785555b506104189291506103d0565b50506001015b808211156103e4576000818150805460018160011615610100020316600290046000825580601f106103b6575061037e565b601f01602090049060005260206000209081019061037e91905b808211156103e457600081556001016103d0565b5090565b82800160010185558215610372579182015b828111156103725782518260005055916020019190600101906103fa565b505050919050565b805460408051602060026001851615610100026000190190941693909304601f8101849004840282018401909252818152918391908301828280156104a65780601f1061047b576101008083540402835291602001916104a6565b820191906000526020600020905b81548152906001019060200180831161048957829003601f168201915b5050505050925050509056",
    address: "",
    generated_with: "2.0.9",
    contract_name: "social"
  };

  function Contract() {
    if (Contract.Pudding == null) {
      throw new Error("social error: Please call load() first before creating new instance of this contract.");
    }

    Contract.Pudding.apply(this, arguments);
  };

  Contract.load = function(Pudding) {
    Contract.Pudding = Pudding;

    Pudding.whisk(contract_data, Contract);

    // Return itself for backwards compatibility.
    return Contract;
  }

  Contract.new = function() {
    if (Contract.Pudding == null) {
      throw new Error("social error: Please call load() first before calling new().");
    }

    return Contract.Pudding.new.apply(Contract, arguments);
  };

  Contract.at = function() {
    if (Contract.Pudding == null) {
      throw new Error("social error: Please call load() first before calling at().");
    }

    return Contract.Pudding.at.apply(Contract, arguments);
  };

  Contract.deployed = function() {
    if (Contract.Pudding == null) {
      throw new Error("social error: Please call load() first before calling deployed().");
    }

    return Contract.Pudding.deployed.apply(Contract, arguments);
  };

  if (typeof module != "undefined" && typeof module.exports != "undefined") {
    module.exports = Contract;
  } else {
    // There will only be one version of Pudding in the browser,
    // and we can use that.
    window.social = Contract;
  }

})();
