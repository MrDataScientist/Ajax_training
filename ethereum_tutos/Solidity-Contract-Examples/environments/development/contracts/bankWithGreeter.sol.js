// Factory "morphs" into a Pudding class.
// The reasoning is that calling load in each context
// is cumbersome.

(function() {

  var contract_data = {
    abi: [{"constant":false,"inputs":[],"name":"withDraw20","outputs":[],"type":"function"},{"constant":false,"inputs":[{"name":"recipient","type":"address"},{"name":"amount","type":"uint256"}],"name":"refund","outputs":[{"name":"","type":"string"}],"type":"function"},{"constant":false,"inputs":[],"name":"kill","outputs":[],"type":"function"},{"constant":false,"inputs":[],"name":"withDraw5","outputs":[],"type":"function"},{"constant":false,"inputs":[],"name":"cashOut","outputs":[],"type":"function"},{"constant":false,"inputs":[],"name":"voteToKill","outputs":[{"name":"","type":"uint256"}],"type":"function"},{"constant":false,"inputs":[],"name":"withDraw100","outputs":[],"type":"function"},{"constant":false,"inputs":[],"name":"mortal","outputs":[],"type":"function"}],
    binary: "606060405266b1a2bc2ec500006001556702c68af0bb140000600255670de0b6b3a7640000600355600060048190556102fc90819061003d90396000f36060604052361561006c5760e060020a60003504631858fd3b811461006e578063410085df146100ac57806341c0e1b5146100fc5780637217228e14610124578063793cd71e1461016557806381b19cde14610196578063d51cd08a146101b1578063f1eae25c146101f2575b005b61006c60025430600160a060020a03163111156100aa5760405160008054600254600160a060020a03919091169282818181858883f150505050505b565b61021660043560243560408051602081019091526000815230600160a060020a03163182101561029657604051600160a060020a03841690600090849082818181858883f19350505050506102cc565b61006c5b600054600160a060020a03338116911614156100aa57600054600160a060020a0316ff5b61006c60015430600160a060020a03163111156100aa5760405160008054600154600160a060020a03919091169282818181858883f19350505050506100aa565b61006c60405160008054600160a060020a039081169260023090921631919091049082818181858883f15050505050565b6102846000600360046000505411156102d2576102d2610100565b61006c60035430600160a060020a03163111156100aa5760008054600354604051600160a060020a03909216929182818181858883f19350505050506100aa565b61006c6000805473ffffffffffffffffffffffffffffffffffffffff191633179055565b60405180806020018281038252838181518152602001915080519060200190808383829060006004602084601f0104600f02600301f150905090810190601f1680156102765780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b60408051918252519081900360200190f35b5060408051808201909152601781527f526566756e6420616d6f756e7420746f6f206c6172676500000000000000000060208201525b92915050565b600054600160a060020a03908116339190911614156102f5576004805460010190555b506004549056",
    unlinked_binary: "606060405266b1a2bc2ec500006001556702c68af0bb140000600255670de0b6b3a7640000600355600060048190556102fc90819061003d90396000f36060604052361561006c5760e060020a60003504631858fd3b811461006e578063410085df146100ac57806341c0e1b5146100fc5780637217228e14610124578063793cd71e1461016557806381b19cde14610196578063d51cd08a146101b1578063f1eae25c146101f2575b005b61006c60025430600160a060020a03163111156100aa5760405160008054600254600160a060020a03919091169282818181858883f150505050505b565b61021660043560243560408051602081019091526000815230600160a060020a03163182101561029657604051600160a060020a03841690600090849082818181858883f19350505050506102cc565b61006c5b600054600160a060020a03338116911614156100aa57600054600160a060020a0316ff5b61006c60015430600160a060020a03163111156100aa5760405160008054600154600160a060020a03919091169282818181858883f19350505050506100aa565b61006c60405160008054600160a060020a039081169260023090921631919091049082818181858883f15050505050565b6102846000600360046000505411156102d2576102d2610100565b61006c60035430600160a060020a03163111156100aa5760008054600354604051600160a060020a03909216929182818181858883f19350505050506100aa565b61006c6000805473ffffffffffffffffffffffffffffffffffffffff191633179055565b60405180806020018281038252838181518152602001915080519060200190808383829060006004602084601f0104600f02600301f150905090810190601f1680156102765780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b60408051918252519081900360200190f35b5060408051808201909152601781527f526566756e6420616d6f756e7420746f6f206c6172676500000000000000000060208201525b92915050565b600054600160a060020a03908116339190911614156102f5576004805460010190555b506004549056",
    address: "",
    generated_with: "2.0.9",
    contract_name: "bankWithGreeter"
  };

  function Contract() {
    if (Contract.Pudding == null) {
      throw new Error("bankWithGreeter error: Please call load() first before creating new instance of this contract.");
    }

    Contract.Pudding.apply(this, arguments);
  };

  Contract.load = function(Pudding) {
    Contract.Pudding = Pudding;

    Pudding.whisk(contract_data, Contract);

    // Return itself for backwards compatibility.
    return Contract;
  }

  Contract.new = function() {
    if (Contract.Pudding == null) {
      throw new Error("bankWithGreeter error: Please call load() first before calling new().");
    }

    return Contract.Pudding.new.apply(Contract, arguments);
  };

  Contract.at = function() {
    if (Contract.Pudding == null) {
      throw new Error("bankWithGreeter error: Please call load() first before calling at().");
    }

    return Contract.Pudding.at.apply(Contract, arguments);
  };

  Contract.deployed = function() {
    if (Contract.Pudding == null) {
      throw new Error("bankWithGreeter error: Please call load() first before calling deployed().");
    }

    return Contract.Pudding.deployed.apply(Contract, arguments);
  };

  if (typeof module != "undefined" && typeof module.exports != "undefined") {
    module.exports = Contract;
  } else {
    // There will only be one version of Pudding in the browser,
    // and we can use that.
    window.bankWithGreeter = Contract;
  }

})();
